# ====== HTTP → HTTPS + ACME ======
# Nginx: rate-limit и простая bot-защита
server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN};

    # ACME challenge (Let’s Encrypt webroot)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# ====== Глобальные зоны лимитов ======
# Лимит RPS на IP (пример: 10 запросов/с с burst 20)
limit_req_zone $binary_remote_addr zone=req_per_ip:10m rate=10r/s;

# Ограничение одновременных соединений на IP
limit_conn_zone $binary_remote_addr zone=conn_per_ip:10m;

# Простой фильтр «плохих» User-Agent'ов (минимальный пример)
map $http_user_agent $is_bad_ua {
    default 0;
    ~*(sqlmap|nikto|dirbuster|arachni|curl/7\.19|nessus) 1;
}

# ====== HTTPS сервер ======
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAIN};

    ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

    # Безопасные базовые заголовки
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy no-referrer-when-downgrade;
    # (опц.) HSTS после проверки HTTPS:
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Отсекать «плохих» ботов
    if ($is_bad_ua) { return 403; }

    # Лимиты на весь сервер (можно перенести внутрь location)
    limit_req zone=req_per_ip burst=20 nodelay;
    limit_conn conn_per_ip 40;

    # Прокси на Node.js
    location / {
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_read_timeout 60s;

        proxy_pass http://nodejs:3000;
    }

    # (опц.) ограничить доступ к административным путям
    # location /admin/ { return 403; }
}
